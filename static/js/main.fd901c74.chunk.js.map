{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/seacrh-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchfield","fetch","then","response","json","users","setState","this","filterResult","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,WCMfC,MAVf,SAAkBR,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,U,MCLpB,SAASM,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC7C,OACI,8BACI,uBAAOZ,UAAU,yBAAyBa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,M,ICAnFG,E,kDACnB,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,MAAQ,CACXR,SAAU,GACVS,YAAa,IALE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,8CAA8CC,MAClD,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAC3B,SAAAG,GAAK,OAAI,EAAKC,SAAS,CACrBf,SAAUc,S,oBAIlB,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAejB,EAASkB,QAAO,SAAAvB,GAAO,OAC1CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OACE,gCAEE,cAACjB,EAAD,CAAWC,YAAY,iBAAiBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAzBKO,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fd901c74.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css';\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=100x100`}></img>\r\n            <h2> {props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './card-list.style.css'\r\nimport Card from '../card/card.component'\r\n\r\nfunction CardList(props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nexport default function SearchBox({ placeholder, handleChange }) {\r\n    return (\r\n        <div>\r\n            <input className='searchbox center-block' type=\"search\" placeholder={placeholder} onChange={handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\nimport './App.css';\n\nimport React, { Component } from 'react'\nimport CardList from './component/card-list/card-list.component'\nimport SearchBox from './component/seacrh-box/search-box.component';\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      monsters: [],\n      searchfield: ''\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n      response => response.json()).then(\n        users => this.setState({\n          monsters: users\n        })\n      );\n  }\n  render() {\n    const { monsters, searchfield } = this.state\n    const filterResult = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return (\n      <div>\n        {/* <input type='search' onChange={(e) => this.setState({ searchfield: e.target.value })}></input> */}\n        <SearchBox placeholder=\"Search Monster\" handleChange={e => this.setState({ searchfield: e.target.value })} />\n        <CardList monsters={filterResult} />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}